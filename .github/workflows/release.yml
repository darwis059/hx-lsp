name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - patch/ci-release-*

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [x86_64-linux, aarch64-linux, x86_64-macos, x86_64-windows]
        include:
        - build: x86_64-linux
          os: ubuntu-24.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          cross: false
        - build: aarch64-linux
          os: ubuntu-24.04-arm
          rust: stable
          target: aarch64-unknown-linux-gnu
          cross: false
        - build: x86_64-macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          cross: false
        - build: x86_64-windows
          os: windows-latest
          rust: stable
          target: x86_64-pc-windows-msvc
          cross: false
        - build: aarch64-macos
          os: macos-latest
          rust: stable
          target: aarch64-apple-darwin
          cross: false
          skip_tests: true

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      # 安装 Rust 工具链 + 目标平台支持
      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      # 构建发布版
      - name: Cargo build
        run: cargo build --release --locked --target ${{ matrix.target }}

      # 重命名二进制文件
      - name: Rename binary
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/hx-lsp${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }} release/${{ matrix.bin_name }}

      # 上传为制品
      - uses: actions/upload-artifact@v4 
        with:
          name: bins-${{ matrix.build }}
          path: release/${{ matrix.bin_name }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: binaries

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            binaries/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
